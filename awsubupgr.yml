---
- hosts: aws
  gather_facts: yes
  become: yes

  tasks:

    # Use block to perform tasks conditionallyâ€”only if running Ubuntu 16.04.
    - block:

      - debug:
          msg: 'This server is running Ubuntu 16.04 LTS and will be upgraded to 18.04 LTS.'

      # Now would be a good time to take a backup if you can trigger an
      # automated backup!

      - name: Remove the EOL message of the day if one exists.
        file:
          path: "{{ item }}"
          state: absent
        with_items:
          - /etc/update-motd.d/99-esm
          - /run/motd.dynamic

      - name: Update apt-get repo and cache
        apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

      - name: Upgrade all apt packages
        apt: upgrade=dist force_apt_get=yes

      - name: Upgrade all packages to the latest version
        apt: update_cache=yes upgrade=full

      - name: Ensure update-manager-core is installed.
        apt: name=update-manager-core state=present

      - name: Run do-release-upgrade non-interactively.
        command: do-release-upgrade -d -f DistUpgradeViewNonInteractive

      # Note: In Ansible 2.7+, use the reboot module instead.
      - name: Reboot the server.
        command: reboot
        async: 0
        poll: 0

      - name: Wait for server to reboot.
        wait_for:
          host: "{{ ansible_ssh_host }}"
          port: 22
          state: started
        connection: local
        become: no

      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'
      
      # After the playbook is finished, confirm all the servers
      # are actually upgraded e.g.:
      #     ansible [group] -a "lsb_release -a"

